// Copyright (c) 2013, Tencent Inc.
// All rights reserved.
// Author: ManFeng XU <svdxu@tencent.com>

#include "thirdparty/gtest/gtest.h"
#include "google/protobuf/text_format.h"
#include "app/qzap/common/utility/targeting_solid_finger_print.h"

TEST(TargetingSolidStableFormatString, stable)
{
    std::string solid_string_1 =
        "targeting_plane: {"
        " targeting_type: \"hello1\""
        " operator: TARGETING_LOGICOPERATOR_OR"
        " reprice: {"
        "   cpc_adjust_percent: 100"
        " }"
        " targeting_line: {"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 1"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 300"
        "     }"
        "   }"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 2"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 100"
        "     }"
        "   }"
        "   operator: TARGETING_LOGICOPERATOR_OR"
        "   not_operator: true"
        "   reprice: {"
        "     cpc_adjust_percent: 200"
        "   }"
        " }"
        " targeting_line: {"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 3"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 300"
        "     }"
        "   }"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 4"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 100"
        "     }"
        "   }"
        "   operator: TARGETING_LOGICOPERATOR_OR"
        "   not_operator: true"
        "   reprice: {"
        "     cpc_adjust_percent: 200"
        "   }"
        " }"
        "}"
        "targeting_plane: {"
        " targeting_type: \"hello2\""
        " operator: TARGETING_LOGICOPERATOR_AND"
        " reprice: {"
        "   cpc_adjust_percent: 400"
        " }"
        " targeting_line: {"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 2"
        "     }"
        "   }"
        "   operator: TARGETING_LOGICOPERATOR_OR"
        "   not_operator: false"
        "   reprice: {"
        "     cpc_adjust_percent: 500"
        "   }"
        "  }"
        "}"
        ;
    QZAP::AD::TargetingSolid solid_1;
    ASSERT_TRUE(google::protobuf::TextFormat::ParseFromString(solid_string_1, &solid_1));

    QZAP::AD::TargetingSolid stable_solid_1;
    StableTargetingSolid(solid_1, &stable_solid_1);
    std::string stable_string_1 = stable_solid_1.ShortDebugString();

    std::string solid_string_2 =
        "targeting_plane: {"
        " targeting_type: \"hello2\""
        " operator: TARGETING_LOGICOPERATOR_AND"
        " reprice: {"
        "   cpc_adjust_percent: 400"
        " }"
        " targeting_line: {"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 2"
        "     }"
        "   }"
        "   operator: TARGETING_LOGICOPERATOR_OR"
        "   not_operator: false"
        "   reprice: {"
        "     cpc_adjust_percent: 500"
        "   }"
        "  }"
        "}"
        "targeting_plane: {"
        " targeting_type: \"hello1\""
        " operator: TARGETING_LOGICOPERATOR_OR"
        " reprice: {"
        "   cpc_adjust_percent: 100"
        " }"
        " targeting_line: {"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 4"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 100"
        "     }"
        "   }"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 3"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 300"
        "     }"
        "   }"
        "   operator: TARGETING_LOGICOPERATOR_OR"
        "   not_operator: true"
        "   reprice: {"
        "     cpc_adjust_percent: 200"
        "   }"
        " }"
        " targeting_line: {"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 2"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 100"
        "     }"
        "   }"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 1"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 300"
        "     }"
        "   }"
        "   operator: TARGETING_LOGICOPERATOR_OR"
        "   not_operator: true"
        "   reprice: {"
        "     cpc_adjust_percent: 200"
        "   }"
        " }"
        "}"
        ;
    QZAP::AD::TargetingSolid solid_2;
    ASSERT_TRUE(google::protobuf::TextFormat::ParseFromString(solid_string_2, &solid_2));

    QZAP::AD::TargetingSolid stable_solid_2;
    StableTargetingSolid(solid_2, &stable_solid_2);
    std::string stable_string_2 = stable_solid_2.ShortDebugString();

    EXPECT_EQ(stable_string_2, "targeting_plane { targeting_type: \"hello1\" targeting_line { targeting_point { targeting_meta_data { type: POINT targeting_id: 1 } reprice { cpc_adjust_percent: 300 } } targeting_point { targeting_meta_data { type: POINT targeting_id: 2 } reprice { cpc_adjust_percent: 100 } } operator: TARGETING_LOGICOPERATOR_OR not_operator: true reprice { cpc_adjust_percent: 200 } } targeting_line { targeting_point { targeting_meta_data { type: POINT targeting_id: 3 } reprice { cpc_adjust_percent: 300 } } targeting_point { targeting_meta_data { type: POINT targeting_id: 4 } reprice { cpc_adjust_percent: 100 } } operator: TARGETING_LOGICOPERATOR_OR not_operator: true reprice { cpc_adjust_percent: 200 } } operator: TARGETING_LOGICOPERATOR_OR reprice { cpc_adjust_percent: 100 } } targeting_plane { targeting_type: \"hello2\" targeting_line { targeting_point { targeting_meta_data { type: POINT targeting_id: 2 } } operator: TARGETING_LOGICOPERATOR_OR not_operator: false reprice { cpc_adjust_percent: 500 } } operator: TARGETING_LOGICOPERATOR_AND reprice { cpc_adjust_percent: 400 } }");
    EXPECT_EQ(stable_string_1, stable_string_2);
}

TEST(TargetingSolidFingerPrint, finger)
{
    std::string solid_string_1 =
        "targeting_plane: {"
        " targeting_type: \"hello1\""
        " operator: TARGETING_LOGICOPERATOR_OR"
        " reprice: {"
        "   cpc_adjust_percent: 100"
        " }"
        " targeting_line: {"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 1"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 300"
        "     }"
        "   }"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 2"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 100"
        "     }"
        "   }"
        "   operator: TARGETING_LOGICOPERATOR_OR"
        "   not_operator: true"
        "   reprice: {"
        "     cpc_adjust_percent: 200"
        "   }"
        " }"
        " targeting_line: {"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 3"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 300"
        "     }"
        "   }"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 4"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 100"
        "     }"
        "   }"
        "   operator: TARGETING_LOGICOPERATOR_OR"
        "   not_operator: true"
        "   reprice: {"
        "     cpc_adjust_percent: 200"
        "   }"
        " }"
        "}"
        "targeting_plane: {"
        " targeting_type: \"hello2\""
        " operator: TARGETING_LOGICOPERATOR_AND"
        " reprice: {"
        "   cpc_adjust_percent: 400"
        " }"
        " targeting_line: {"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 2"
        "     }"
        "   }"
        "   operator: TARGETING_LOGICOPERATOR_OR"
        "   not_operator: false"
        "   reprice: {"
        "     cpc_adjust_percent: 500"
        "   }"
        "  }"
        "}"
        ;
    QZAP::AD::TargetingSolid solid_1;
    ASSERT_TRUE(google::protobuf::TextFormat::ParseFromString(solid_string_1, &solid_1));
    uint64_t finger_1 = TargetingSolidFingerPrint(solid_1);

    std::string solid_string_2 =
        "targeting_plane: {"
        " targeting_type: \"hello2\""
        " operator: TARGETING_LOGICOPERATOR_AND"
        " reprice: {"
        "   cpc_adjust_percent: 400"
        " }"
        " targeting_line: {"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 2"
        "     }"
        "   }"
        "   operator: TARGETING_LOGICOPERATOR_OR"
        "   not_operator: false"
        "   reprice: {"
        "     cpc_adjust_percent: 500"
        "   }"
        "  }"
        "}"
        "targeting_plane: {"
        " targeting_type: \"hello1\""
        " operator: TARGETING_LOGICOPERATOR_OR"
        " reprice: {"
        "   cpc_adjust_percent: 100"
        " }"
        " targeting_line: {"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 4"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 100"
        "     }"
        "   }"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 3"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 300"
        "     }"
        "   }"
        "   operator: TARGETING_LOGICOPERATOR_OR"
        "   not_operator: true"
        "   reprice: {"
        "     cpc_adjust_percent: 200"
        "   }"
        " }"
        " targeting_line: {"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 2"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 100"
        "     }"
        "   }"
        "   targeting_point: {"
        "     targeting_meta_data: {"
        "       type: POINT"
        "       targeting_id: 1"
        "     }"
        "     reprice: {"
        "       cpc_adjust_percent: 300"
        "     }"
        "   }"
        "   operator: TARGETING_LOGICOPERATOR_OR"
        "   not_operator: true"
        "   reprice: {"
        "     cpc_adjust_percent: 200"
        "   }"
        " }"
        "}"
        ;
    QZAP::AD::TargetingSolid solid_2;
    ASSERT_TRUE(google::protobuf::TextFormat::ParseFromString(solid_string_2, &solid_2));
    uint64_t finger_2 = TargetingSolidFingerPrint(solid_2);

    EXPECT_EQ(finger_1, finger_2);
    EXPECT_EQ(finger_1, 8242786623641461312ull);
}
